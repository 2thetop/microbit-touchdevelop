(uint32_t)(void*)::touch_develop::action::is_invalid,  // F1 {shim:action::is_invalid}
(uint32_t)(void*)::bitvm::action::mk,  // F3 bvm {shim:action::mk}
(uint32_t)(void*)::bitvm::action::run,  // P1 bvm {shim:action::run}
(uint32_t)(void*)::touch_develop::bits::and_uint32,  // F2 {shim:bits::and_uint32}
(uint32_t)(void*)::touch_develop::bits::or_uint32,  // F2 {shim:bits::or_uint32}
(uint32_t)(void*)::touch_develop::bits::rotate_left_uint32,  // F2 {shim:bits::rotate_left_uint32}
(uint32_t)(void*)::touch_develop::bits::rotate_right_uint32,  // F2 {shim:bits::rotate_right_uint32}
(uint32_t)(void*)::touch_develop::bits::shift_left_uint32,  // F2 {shim:bits::shift_left_uint32}
(uint32_t)(void*)::touch_develop::bits::shift_right_uint32,  // F2 {shim:bits::shift_right_uint32}
(uint32_t)(void*)::touch_develop::bits::xor_uint32,  // F2 {shim:bits::xor_uint32}
(uint32_t)(void*)::bitvm::allocate,  // F1 {shim:bitvm::allocate}
(uint32_t)(void*)::bitvm::const3,  // F0 {shim:bitvm::const3}
(uint32_t)(void*)::bitvm::debugMemLeaks,  // P0 {shim:bitvm::debugMemLeaks}
(uint32_t)(void*)::bitvm::decr,  // P1 {shim:bitvm::decr}
(uint32_t)(void*)::bitvm::error,  // P2 {shim:bitvm::error}
(uint32_t)(void*)::bitvm::exec_binary,  // P1 {shim:bitvm::exec_binary}
(uint32_t)(void*)::bitvm::incr,  // P1 {shim:bitvm::incr}
(uint32_t)(void*)::bitvm::is_invalid,  // F1 {shim:bitvm::is_invalid}
(uint32_t)(void*)::bitvm::ldfld,  // F2 {shim:bitvm::ldfld}
(uint32_t)(void*)::bitvm::ldfldRef,  // F2 {shim:bitvm::ldfldRef}
(uint32_t)(void*)::bitvm::ldglb,  // F1 {shim:bitvm::ldglb}
(uint32_t)(void*)::bitvm::ldglbRef,  // F1 {shim:bitvm::ldglbRef}
(uint32_t)(void*)::bitvm::ldloc,  // F1 {shim:bitvm::ldloc}
(uint32_t)(void*)::bitvm::ldlocRef,  // F1 {shim:bitvm::ldlocRef}
(uint32_t)(void*)::bitvm::mkloc,  // F0 {shim:bitvm::mkloc}
(uint32_t)(void*)::bitvm::mklocRef,  // F0 {shim:bitvm::mklocRef}
(uint32_t)(void*)::bitvm::stclo,  // F3 {shim:bitvm::stclo}
(uint32_t)(void*)::bitvm::stfld,  // P3 {shim:bitvm::stfld}
(uint32_t)(void*)::bitvm::stfldRef,  // P3 {shim:bitvm::stfldRef}
(uint32_t)(void*)::bitvm::stglb,  // P2 {shim:bitvm::stglb}
(uint32_t)(void*)::bitvm::stglbRef,  // P2 {shim:bitvm::stglbRef}
(uint32_t)(void*)::bitvm::stloc,  // P2 {shim:bitvm::stloc}
(uint32_t)(void*)::bitvm::stlocRef,  // P2 {shim:bitvm::stlocRef}
(uint32_t)(void*)::bitvm::stringLiteral,  // F2 {shim:bitvm::stringLiteral}
(uint32_t)(void*)::touch_develop::boolean::and_,  // F2 {shim:boolean::and_}
(uint32_t)(void*)::touch_develop::boolean::equals,  // F2 {shim:boolean::equals}
(uint32_t)(void*)::touch_develop::boolean::not_,  // F1 {shim:boolean::not_}
(uint32_t)(void*)::touch_develop::boolean::or_,  // F2 {shim:boolean::or_}
(uint32_t)(void*)::bitvm::bitvm_boolean::to_string,  // F1 over {shim:boolean::to_string}
(uint32_t)(void*)::bitvm::collection::add,  // P2 bvm {shim:collection::add}
(uint32_t)(void*)::bitvm::collection::at,  // F2 bvm {shim:collection::at}
(uint32_t)(void*)::bitvm::collection::count,  // F1 bvm {shim:collection::count}
(uint32_t)(void*)::bitvm::collection::index_of,  // F3 bvm {shim:collection::index_of}
(uint32_t)(void*)::bitvm::collection::mk,  // F0 bvm {shim:collection::mk}
(uint32_t)(void*)::bitvm::collection::remove,  // F2 bvm {shim:collection::remove}
(uint32_t)(void*)::bitvm::collection::remove_at,  // P2 bvm {shim:collection::remove_at}
(uint32_t)(void*)::bitvm::collection::set_at,  // P3 bvm {shim:collection::set_at}
(uint32_t)(void*)::bitvm::contract::assert,  // P2 bvm {shim:contract::assert}
(uint32_t)(void*)::touch_develop::ds1307::adjust,  // P1 {shim:ds1307::adjust}
(uint32_t)(void*)::touch_develop::ds1307::bcd2bin,  // F1 {shim:ds1307::bcd2bin}
(uint32_t)(void*)::touch_develop::ds1307::bin2bcd,  // F1 {shim:ds1307::bin2bcd}
(uint32_t)(void*)::touch_develop::math::abs,  // F1 {shim:math::abs}
(uint32_t)(void*)::touch_develop::math::clamp,  // F3 {shim:math::clamp}
(uint32_t)(void*)::touch_develop::math::max,  // F2 {shim:math::max}
(uint32_t)(void*)::touch_develop::math::min,  // F2 {shim:math::min}
(uint32_t)(void*)::touch_develop::math::mod,  // F2 {shim:math::mod}
(uint32_t)(void*)::touch_develop::math::pow,  // F2 {shim:math::pow}
(uint32_t)(void*)::touch_develop::math::random,  // F1 {shim:math::random}
(uint32_t)(void*)::touch_develop::math::sign,  // F1 {shim:math::sign}
(uint32_t)(void*)::touch_develop::math::sqrt,  // F1 {shim:math::sqrt}
(uint32_t)(void*)::touch_develop::micro_bit::analogReadPin,  // F1 {shim:micro_bit::analogReadPin}
(uint32_t)(void*)::touch_develop::micro_bit::analogWritePin,  // P2 {shim:micro_bit::analogWritePin}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::callback,  // P2 over {shim:micro_bit::callback}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::clearImage,  // P1 over {shim:micro_bit::clearImage}
(uint32_t)(void*)::touch_develop::micro_bit::clearScreen,  // P0 {shim:micro_bit::clearScreen}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::compassCalibrateEnd,  // P0 over {shim:micro_bit::compassCalibrateEnd}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::compassCalibrateStart,  // P0 over {shim:micro_bit::compassCalibrateStart}
(uint32_t)(void*)::touch_develop::micro_bit::compassHeading,  // F0 {shim:micro_bit::compassHeading}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::createImage,  // F3 over {shim:micro_bit::createImage}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::createImageFromString,  // F1 over {shim:micro_bit::createImageFromString}
(uint32_t)(void*)::touch_develop::micro_bit::digitalReadPin,  // F1 {shim:micro_bit::digitalReadPin}
(uint32_t)(void*)::touch_develop::micro_bit::digitalWritePin,  // P2 {shim:micro_bit::digitalWritePin}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::displayScreenShot,  // F0 over {shim:micro_bit::displayScreenShot}
(uint32_t)(void*)::touch_develop::micro_bit::enablePitch,  // P1 {shim:micro_bit::enablePitch}
(uint32_t)(void*)::touch_develop::micro_bit::events::alert,  // P1 {shim:micro_bit::events::alert}
(uint32_t)(void*)::touch_develop::micro_bit::events::audio_recorder,  // P1 {shim:micro_bit::events::audio_recorder}
(uint32_t)(void*)::touch_develop::micro_bit::events::camera,  // P1 {shim:micro_bit::events::camera}
(uint32_t)(void*)::touch_develop::micro_bit::events::remote_control,  // P1 {shim:micro_bit::events::remote_control}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::fiberDone,  // P1 over {shim:micro_bit::fiberDone}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::fiberHelper,  // P1 over {shim:micro_bit::fiberHelper}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::forever,  // P1 over {shim:micro_bit::forever}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::forever_stub,  // P1 over {shim:micro_bit::forever_stub}
(uint32_t)(void*)::touch_develop::micro_bit::generate_event,  // P2 {shim:micro_bit::generate_event}
(uint32_t)(void*)::touch_develop::micro_bit::getAcceleration,  // F1 {shim:micro_bit::getAcceleration}
(uint32_t)(void*)::touch_develop::micro_bit::getBrightness,  // F0 {shim:micro_bit::getBrightness}
(uint32_t)(void*)::touch_develop::micro_bit::getCurrentTime,  // F0 {shim:micro_bit::getCurrentTime}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::getImagePixel,  // F3 over {shim:micro_bit::getImagePixel}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::getImageWidth,  // F1 over {shim:micro_bit::getImageWidth}
(uint32_t)(void*)::touch_develop::micro_bit::i2c_read,  // F1 {shim:micro_bit::i2c_read}
(uint32_t)(void*)::touch_develop::micro_bit::i2c_write,  // P2 {shim:micro_bit::i2c_write}
(uint32_t)(void*)::touch_develop::micro_bit::i2c_write2,  // P3 {shim:micro_bit::i2c_write2}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP0,  // F0 over {shim:micro_bit::ioP0}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP1,  // F0 over {shim:micro_bit::ioP1}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP10,  // F0 over {shim:micro_bit::ioP10}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP11,  // F0 over {shim:micro_bit::ioP11}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP12,  // F0 over {shim:micro_bit::ioP12}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP13,  // F0 over {shim:micro_bit::ioP13}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP14,  // F0 over {shim:micro_bit::ioP14}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP15,  // F0 over {shim:micro_bit::ioP15}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP16,  // F0 over {shim:micro_bit::ioP16}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP19,  // F0 over {shim:micro_bit::ioP19}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP2,  // F0 over {shim:micro_bit::ioP2}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP20,  // F0 over {shim:micro_bit::ioP20}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP3,  // F0 over {shim:micro_bit::ioP3}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP4,  // F0 over {shim:micro_bit::ioP4}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP5,  // F0 over {shim:micro_bit::ioP5}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP6,  // F0 over {shim:micro_bit::ioP6}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP7,  // F0 over {shim:micro_bit::ioP7}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP8,  // F0 over {shim:micro_bit::ioP8}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::ioP9,  // F0 over {shim:micro_bit::ioP9}
(uint32_t)(void*)::touch_develop::micro_bit::isButtonPressed,  // F1 {shim:micro_bit::isButtonPressed}
(uint32_t)(void*)::touch_develop::micro_bit::isPinTouched,  // F1 {shim:micro_bit::isPinTouched}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::onButtonPressed,  // P2 over {shim:micro_bit::onButtonPressed}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::onButtonPressedExt,  // P3 over {shim:micro_bit::onButtonPressedExt}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::onPinPressed,  // P2 over {shim:micro_bit::onPinPressed}
(uint32_t)(void*)::touch_develop::micro_bit::on_calibrate_required,  // P1 {shim:micro_bit::on_calibrate_required}
(uint32_t)(void*)::touch_develop::micro_bit::on_event,  // P2 {shim:micro_bit::on_event}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::panic,  // P1 over {shim:micro_bit::panic}
(uint32_t)(void*)::touch_develop::micro_bit::pause,  // P1 {shim:micro_bit::pause}
(uint32_t)(void*)::touch_develop::micro_bit::pitch,  // P2 {shim:micro_bit::pitch}
(uint32_t)(void*)::touch_develop::micro_bit::plot,  // P2 {shim:micro_bit::plot}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::plotImage,  // P2 over {shim:micro_bit::plotImage}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::plotLeds,  // P3 over {shim:micro_bit::plotLeds}
(uint32_t)(void*)::touch_develop::micro_bit::point,  // F2 {shim:micro_bit::point}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::reset,  // P0 over {shim:micro_bit::reset}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::runInBackground,  // P1 over {shim:micro_bit::runInBackground}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::scrollImage,  // P3 over {shim:micro_bit::scrollImage}
(uint32_t)(void*)::touch_develop::micro_bit::scrollNumber,  // P2 {shim:micro_bit::scrollNumber}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::scrollString,  // P2 over {shim:micro_bit::scrollString}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::serialReadDisplayState,  // P0 over {shim:micro_bit::serialReadDisplayState}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::serialReadImage,  // F2 over {shim:micro_bit::serialReadImage}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::serialReadString,  // F0 over {shim:micro_bit::serialReadString}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::serialSendDisplayState,  // P0 over {shim:micro_bit::serialSendDisplayState}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::serialSendImage,  // P1 over {shim:micro_bit::serialSendImage}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::serialSendString,  // P1 over {shim:micro_bit::serialSendString}
(uint32_t)(void*)::touch_develop::micro_bit::setAnalogPeriodUs,  // P2 {shim:micro_bit::setAnalogPeriodUs}
(uint32_t)(void*)::touch_develop::micro_bit::setBrightness,  // P1 {shim:micro_bit::setBrightness}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::setImagePixel,  // P4 over {shim:micro_bit::setImagePixel}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::showAnimation,  // P4 over {shim:micro_bit::showAnimation}
(uint32_t)(void*)::touch_develop::micro_bit::showDigit,  // P1 {shim:micro_bit::showDigit}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::showImage,  // P2 over {shim:micro_bit::showImage}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::showLeds,  // P4 over {shim:micro_bit::showLeds}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::showLetter,  // P1 over {shim:micro_bit::showLetter}
(uint32_t)(void*)::bitvm::bitvm_micro_bit::thermometerGetTemperature,  // F0 over {shim:micro_bit::thermometerGetTemperature}
(uint32_t)(void*)::touch_develop::micro_bit::unPlot,  // P2 {shim:micro_bit::unPlot}
(uint32_t)(void*)::touch_develop::number::div,  // F2 {shim:number::div}
(uint32_t)(void*)::touch_develop::number::eq,  // F2 {shim:number::eq}
(uint32_t)(void*)::touch_develop::number::geq,  // F2 {shim:number::geq}
(uint32_t)(void*)::touch_develop::number::gt,  // F2 {shim:number::gt}
(uint32_t)(void*)::touch_develop::number::leq,  // F2 {shim:number::leq}
(uint32_t)(void*)::touch_develop::number::lt,  // F2 {shim:number::lt}
(uint32_t)(void*)::touch_develop::number::minus,  // F2 {shim:number::minus}
(uint32_t)(void*)::touch_develop::number::neq,  // F2 {shim:number::neq}
(uint32_t)(void*)::touch_develop::number::plus,  // F2 {shim:number::plus}
(uint32_t)(void*)::bitvm::bitvm_number::post_to_wall,  // P1 over {shim:number::post_to_wall}
(uint32_t)(void*)::touch_develop::number::times,  // F2 {shim:number::times}
(uint32_t)(void*)::bitvm::bitvm_number::to_character,  // F1 over {shim:number::to_character}
(uint32_t)(void*)::bitvm::bitvm_number::to_string,  // F1 over {shim:number::to_string}
(uint32_t)(void*)::bitvm::record::mk,  // F2 bvm {shim:record::mk}
(uint32_t)(void*)::bitvm::refcollection::add,  // P2 bvm {shim:refcollection::add}
(uint32_t)(void*)::bitvm::refcollection::at,  // F2 bvm {shim:refcollection::at}
(uint32_t)(void*)::bitvm::refcollection::count,  // F1 bvm {shim:refcollection::count}
(uint32_t)(void*)::bitvm::refcollection::index_of,  // F3 bvm {shim:refcollection::index_of}
(uint32_t)(void*)::bitvm::refcollection::mk,  // F0 bvm {shim:refcollection::mk}
(uint32_t)(void*)::bitvm::refcollection::remove,  // F2 bvm {shim:refcollection::remove}
(uint32_t)(void*)::bitvm::refcollection::remove_at,  // P2 bvm {shim:refcollection::remove_at}
(uint32_t)(void*)::bitvm::refcollection::set_at,  // P3 bvm {shim:refcollection::set_at}
(uint32_t)(void*)::touch_develop::string::_,  // F2 {shim:string::_}
(uint32_t)(void*)::bitvm::string::at,  // F2 bvm {shim:string::at}
(uint32_t)(void*)::bitvm::string::code_at,  // F2 bvm {shim:string::code_at}
(uint32_t)(void*)::bitvm::string::concat,  // F2 bvm {shim:string::concat}
(uint32_t)(void*)::bitvm::string::concat_op,  // F2 bvm {shim:string::concat_op}
(uint32_t)(void*)::bitvm::string::count,  // F1 bvm {shim:string::count}
(uint32_t)(void*)::bitvm::string::equals,  // F2 bvm {shim:string::equals}
(uint32_t)(void*)::bitvm::string::fromLiteral,  // F1 bvm {shim:string::fromLiteral}
(uint32_t)(void*)::bitvm::string::mkEmpty,  // F0 bvm {shim:string::mkEmpty}
(uint32_t)(void*)::bitvm::string::post_to_wall,  // P1 bvm {shim:string::post_to_wall}
(uint32_t)(void*)::bitvm::string::substring,  // F3 bvm {shim:string::substring}
(uint32_t)(void*)::bitvm::string::to_character_code,  // F1 bvm {shim:string::to_character_code}
(uint32_t)(void*)::bitvm::string::to_number,  // F1 bvm {shim:string::to_number}
(uint32_t)(void*)::touch_develop::internal_main,  // P0 {shim:touch_develop::internal_main}
(uint32_t)(void*)::touch_develop::touch_develop::mk_string,  // F1 {shim:touch_develop::mk_string}
